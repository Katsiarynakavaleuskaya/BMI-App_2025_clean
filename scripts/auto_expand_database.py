#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
RU: –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤.
EN: Script for automatic expansion of product database.

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ä–µ—Ü–µ–ø—Ç—ã, –Ω–∞—Ö–æ–¥–∏—Ç –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã
–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –∏—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤.
"""

import logging
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent.parent))

from core.product_finder import ProductFinder
from core.recipe_db import parse_recipe_db

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO, format="%(asctime)s - %(name)s - %(levelname)s - %(message)s"
)
logger = logging.getLogger(__name__)


def main():
    """Main function for automatic database expansion."""
    logger.info("üöÄ Starting automatic database expansion")

    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–∏—Å–∫–æ–≤–∏–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
        finder = ProductFinder()
        logger.info("‚úÖ Product finder initialized")

        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ—Ü–µ–ø—Ç—ã
        recipes = parse_recipe_db("data/recipes_extended.csv")
        logger.info(f"üìö Loaded {len(recipes)} recipes")

        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –∏–∑ —Ä–µ—Ü–µ–ø—Ç–æ–≤
        all_ingredients = []
        for recipe in recipes.values():
            all_ingredients.extend(recipe.ingredients.keys())

        logger.info(f"ü•ò Found {len(all_ingredients)} unique ingredients")

        # –ù–∞—Ö–æ–¥–∏–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã
        missing_products = finder.find_missing_products(all_ingredients)
        logger.info(f"‚ùå Found {len(missing_products)} missing products")

        if not missing_products:
            logger.info("üéâ All products are already in the database!")
            return

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã
        logger.info("üìã Missing products:")
        for i, product in enumerate(missing_products, 1):
            logger.info(f"  {i}. {product}")

        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
        logger.info("üîç Starting product search and addition...")
        results = finder.auto_expand_database(all_ingredients)

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        logger.info("üìä Expansion results:")
        successful = 0
        failed = 0

        for product, success in results.items():
            if success:
                logger.info(f"  ‚úÖ {product} - Added successfully")
                successful += 1
            else:
                logger.info(f"  ‚ùå {product} - Failed to add")
                failed += 1

        logger.info(f"üìà Summary: {successful} successful, {failed} failed")

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        updated_food_db = finder.food_db
        logger.info(f"üìä Database now contains {len(updated_food_db)} products")

        logger.info("üéâ Automatic database expansion completed!")

    except Exception as e:
        logger.error(f"üí• Error during database expansion: {e}")
        sys.exit(1)


if __name__ == "__main__":
    main()
