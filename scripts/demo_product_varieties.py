#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
RU: –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–æ—Ä—Ç–∞–º–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤.
EN: Demo script for working with product varieties.

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç, –∫–∞–∫ —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏
—Å–æ—Ä—Ç–∞–º–∏ –∏ –º–∞—Ä–∫–∞–º–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤, —É—á–∏—Ç—ã–≤–∞—è –∏—Ö –ø–∏—â–µ–≤—É—é —Ü–µ–Ω–Ω–æ—Å—Ç—å.
"""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent.parent))

from core.product_varieties import ProductVarietiesManager


def main():
    """Main function for product varieties demo."""
    print("üöÄ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —Å–æ—Ä—Ç–æ–≤ –ø—Ä–æ–¥—É–∫—Ç–æ–≤")
    print("=" * 50)

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä —Å–æ—Ä—Ç–æ–≤
    manager = ProductVarietiesManager()

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats = manager.get_statistics()
    print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
    print(f"  –í—Å–µ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤: {stats['total_products']}")
    print(f"  –í—Å–µ–≥–æ —Å–æ—Ä—Ç–æ–≤: {stats['total_varieties']}")
    print(
        f"  –°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ä—Ç–æ–≤ –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç: {stats['avg_varieties_per_product']}"
    )
    print()

    # –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º —Ä–∞–±–æ—Ç—É —Å –º–æ–ª–æ—á–Ω—ã–º–∏ –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏
    demo_products = ["–ú–æ–ª–æ–∫–æ", "–°—ã—Ä", "–ô–æ–≥—É—Ä—Ç", "–¢–≤–æ—Ä–æ–≥"]

    for product_name in demo_products:
        print(f"ü•õ –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–¥—É–∫—Ç–∞: {product_name}")
        print("-" * 30)

        varieties = manager.get_varieties(product_name)
        if not varieties:
            print(f"  ‚ùå –°–æ—Ä—Ç–∞ –¥–ª—è {product_name} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            print()
            continue

        print(f"  üìã –ù–∞–π–¥–µ–Ω–æ —Å–æ—Ä—Ç–æ–≤: {len(varieties)}")

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ —Å–æ—Ä—Ç–∞
        for i, variety in enumerate(varieties, 1):
            print(f"    {i}. {variety.variety} ({variety.brand})")
            print(
                f"       –ë–µ–ª–æ–∫: {variety.protein_g}g, –ñ–∏—Ä—ã: {variety.fat_g}g, "
                f"–£–≥–ª–µ–≤–æ–¥—ã: {variety.carbs_g}g, –°–∞—Ö–∞—Ä: {variety.sugar_g}g"
            )
            print(f"       –ö–∞–ª–æ—Ä–∏–∏: {variety.get_calories():.1f} –∫–∫–∞–ª")
            if variety.notes:
                print(f"       –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: {variety.notes}")

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–∏—Ç–∞—Ç–µ–ª—å–Ω–æ–π —Ü–µ–Ω–Ω–æ—Å—Ç–∏
        comparison = manager.get_nutritional_comparison(product_name)
        if comparison:
            print("  üìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–∏—Ç–∞—Ç–µ–ª—å–Ω–æ–π —Ü–µ–Ω–Ω–æ—Å—Ç–∏:")
            for variety_name, nutrition in comparison.items():
                print(f"    {variety_name}:")
                print(
                    f"      –ö–∞–ª–æ—Ä–∏–∏: {nutrition['calories']:.1f}, "
                    f"–ë–µ–ª–æ–∫: {nutrition['protein']}g, "
                    f"–ñ–∏—Ä—ã: {nutrition['fat']}g, "
                    f"–°–∞—Ö–∞—Ä: {nutrition['sugar']}g"
                )

        # –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        print("  üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")

        # –ù–∏–∑–∫–æ—Å–∞—Ö–∞—Ä–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
        low_sugar = manager.get_best_variety(product_name, "low_sugar")
        if low_sugar:
            print(
                f"    –ù–∏–∑–∫–∏–π —Å–∞—Ö–∞—Ä: {low_sugar.variety} ({low_sugar.sugar_g}g —Å–∞—Ö–∞—Ä–∞)"
            )

        # –í—ã—Å–æ–∫–æ–±–µ–ª–∫–æ–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
        high_protein = manager.get_best_variety(product_name, "high_protein")
        if high_protein:
            print(
                f"    –í—ã—Å–æ–∫–∏–π –±–µ–ª–æ–∫: {high_protein.variety} ({high_protein.protein_g}g –±–µ–ª–∫–∞)"
            )

        # –ù–∏–∑–∫–æ–∂–∏—Ä–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
        low_fat = manager.get_best_variety(product_name, "low_fat")
        if low_fat:
            print(f"    –ù–∏–∑–∫–∏–µ –∂–∏—Ä—ã: {low_fat.variety} ({low_fat.fat_g}g –∂–∏—Ä–æ–≤)")

        print()

    # –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    print("üë§ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")
    print("=" * 50)

    user_profiles = [
        {"name": "–î–∏–∞–±–µ—Ç–∏–∫", "preferences": {"low_sugar": True, "low_fat": True}},
        {"name": "–°–ø–æ—Ä—Ç—Å–º–µ–Ω", "preferences": {"high_protein": True, "low_sugar": True}},
        {
            "name": "–í–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω–µ—Ü",
            "preferences": {"vegetarian": True, "gluten_free": True},
        },
    ]

    for profile in user_profiles:
        print(f"üë§ –ü—Ä–æ—Ñ–∏–ª—å: {profile['name']}")
        print(f"   –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è: {profile['preferences']}")

        for product_name in ["–ú–æ–ª–æ–∫–æ", "–°—ã—Ä"]:
            recommended = manager.recommend_variety(
                product_name, profile["preferences"]
            )
            if recommended:
                print(f"   {product_name}: {recommended.variety} ({recommended.brand})")
                print(
                    f"     –ë–µ–ª–æ–∫: {recommended.protein_g}g, –ñ–∏—Ä—ã: {recommended.fat_g}g, "
                    f"–°–∞—Ö–∞—Ä: {recommended.sugar_g}g"
                )
            else:
                print(f"   {product_name}: —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        print()

    # –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º
    print("üîç –ü–æ–∏—Å–∫ –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º")
    print("=" * 50)

    search_examples = [
        ("–ú–æ–ª–æ–∫–æ", "–æ–±–µ–∑–∂–∏—Ä–µ–Ω–Ω–æ–µ", None),
        ("–°—ã—Ä", "—Ç–≤–µ—Ä–¥—ã–π", None),
        ("–ô–æ–≥—É—Ä—Ç", None, "—Å—Ç–∞–Ω–¥–∞—Ä—Ç"),
    ]

    for product_name, variety_name, brand in search_examples:
        print(f"üîç –ü–æ–∏—Å–∫: {product_name}")
        if variety_name:
            print(f"   –°–æ—Ä—Ç: {variety_name}")
        if brand:
            print(f"   –ú–∞—Ä–∫–∞: {brand}")

        results = manager.search_varieties(product_name, variety_name, brand)

        if results:
            print(f"   –ù–∞–π–¥–µ–Ω–æ: {len(results)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
            for variety in results:
                print(f"     - {variety.variety} ({variety.brand})")
                print(
                    f"       –ë–µ–ª–æ–∫: {variety.protein_g}g, –ñ–∏—Ä—ã: {variety.fat_g}g, "
                    f"–°–∞—Ö–∞—Ä: {variety.sugar_g}g"
                )
        else:
            print("   –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        print()

    print("‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print()
    print("üí° –ö–ª—é—á–µ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã:")
    print("  ‚Ä¢ –£—á–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–æ—Ä—Ç–æ–≤ –∏ –º–∞—Ä–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤")
    print("  ‚Ä¢ –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∏—Ç–∞—Ç–µ–ª—å–Ω–æ–π —Ü–µ–Ω–Ω–æ—Å—Ç–∏")
    print("  ‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")
    print("  ‚Ä¢ –ü–æ–∏—Å–∫ –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º (—Å–æ—Ä—Ç, –º–∞—Ä–∫–∞)")
    print("  ‚Ä¢ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–∏—Ç–∞—Ç–µ–ª—å–Ω–æ–π —Ü–µ–Ω–Ω–æ—Å—Ç–∏")
    print("  ‚Ä¢ –£—á–µ—Ç —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è —Å–∞—Ö–∞—Ä–∞ –∏ –¥–æ–±–∞–≤–æ–∫")


if __name__ == "__main__":
    main()
