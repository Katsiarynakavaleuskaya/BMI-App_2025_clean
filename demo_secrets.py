#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å —Å–µ–∫—Ä–µ—Ç–∞–º–∏ –≤ BMI-App_2025_clean
"""

import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

def test_env_loading():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env"""
    print("üîç –ü–†–û–í–ï–†–ö–ê –ó–ê–ì–†–£–ó–ö–ò –°–ï–ö–†–ï–¢–û–í:")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
    env_file = project_root / ".env"
    if env_file.exists():
        print(f"‚úÖ .env —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω: {env_file}")
    else:
        print(f"‚ùå .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {env_file}")
        return False
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º .env
    try:
        import dotenv
        dotenv.load_dotenv(env_file)
        print("‚úÖ .env —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω")
    except ImportError:
        print("‚ùå python-dotenv –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ .env: {e}")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    api_key = os.getenv("API_KEY")
    xai_key = os.getenv("XAI_API_KEY")
    
    print(f"üìã API_KEY: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if api_key else '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
    print(f"üìã XAI_API_KEY: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if xai_key else '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
    
    if api_key and api_key != "your_api_key_here":
        print(f"üìã API_KEY (–ø–µ—Ä–≤—ã–µ 8 —Å–∏–º–≤–æ–ª–æ–≤): {api_key[:8]}...")
    elif api_key == "your_api_key_here":
        print("‚ö†Ô∏è  API_KEY —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –Ω–∞—Å—Ç–æ—è—â–∏–π –∫–ª—é—á")
    
    return True

def test_api_key_validation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤–∞–ª–∏–¥–∞—Ü–∏—é API –∫–ª—é—á–µ–π"""
    print("\nüîê –ü–†–û–í–ï–†–ö–ê –í–ê–õ–ò–î–ê–¶–ò–ò API –ö–õ–Æ–ß–ï–ô:")
    print("=" * 50)
    
    try:
        from app import get_api_key, api_key_header
        print("‚úÖ –§—É–Ω–∫—Ü–∏–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ API –∫–ª—é—á–µ–π –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
        print(f"‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫ API –∫–ª—é—á–∞: {api_key_header.model.name}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False
    
    # –¢–µ—Å—Ç —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –∫–ª—é—á–æ–º
    try:
        api_key = os.getenv("API_KEY")
        if api_key:
            # –≠–º—É–ª–∏—Ä—É–µ–º –≤—ã–∑–æ–≤ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –∫–ª—é—á–æ–º
            os.environ["API_KEY"] = api_key
            result = get_api_key(api_key)
            print(f"‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –∫–ª—é—á–æ–º: {'–£—Å–ø–µ—à–Ω–æ' if result == api_key else '–û—à–∏–±–∫–∞'}")
        else:
            print("‚ö†Ô∏è  API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {e}")
    
    return True

def show_protected_endpoints():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∑–∞—â–∏—â–µ–Ω–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã"""
    print("\nüõ°Ô∏è  –ó–ê–©–ò–©–ï–ù–ù–´–ï –≠–ù–î–ü–û–ò–ù–¢–´:")
    print("=" * 50)
    
    protected_endpoints = [
        "/api/v1/bmi",
        "/api/v1/premium/bmr", 
        "/api/v1/premium/plate",
        "/api/v1/premium/targets",
        "/api/v1/premium/gaps",
        "/api/v1/admin/db-status",
        "/api/v1/admin/force-update",
        "/api/v1/bmi/pro",
        "/api/v1/insight"
    ]
    
    for endpoint in protected_endpoints:
        print(f"üîí {endpoint}")
    
    print(f"\nüìã –í—Å–µ–≥–æ –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤: {len(protected_endpoints)}")
    print("üí° –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫: X-API-Key: –≤–∞—à_–∫–ª—é—á")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    print("üöÄ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –†–ê–ë–û–¢–´ –° –°–ï–ö–†–ï–¢–ê–ú–ò")
    print("=" * 50)
    print(f"üìÅ –ü—Ä–æ–µ–∫—Ç: {project_root.name}")
    print(f"üìÇ –ü—É—Ç—å: {project_root}")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    test_env_loading()
    test_api_key_validation()
    show_protected_endpoints()
    
    print("\n‚ú® –†–ï–ó–Æ–ú–ï:")
    print("=" * 50)
    print("1. –°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª –Ω–∞ –æ—Å–Ω–æ–≤–µ .env.example")
    print("2. –ó–∞–º–µ–Ω–∏—Ç–µ 'your_api_key_here' –Ω–∞ –Ω–∞—Å—Ç–æ—è—â–∏–π API –∫–ª—é—á")
    print("3. –ó–∞–º–µ–Ω–∏—Ç–µ 'your_xai_api_key_here' –Ω–∞ –Ω–∞—Å—Ç–æ—è—â–∏–π X.AI –∫–ª—é—á")
    print("4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: uvicorn app:app --reload")
    print("5. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ X-API-Key –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∑–∞—â–∏—â–µ–Ω–Ω—ã–º —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞–º")

if __name__ == "__main__":
    main()